C51 COMPILER V9.02   MAIN                                                                  04/12/2015 01:32:40 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\out\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND CODE SYMBOLS PRINT(.\list\main.lst) OBJECT
                    -(.\out\main.obj)

line level    source

   1          
   2          #include "REG51.H"
   3          
   4          #include "stdio.h"
   5          #include "stdarg.h"
   6          
   7          #include "STRING.H"
   8          
   9          
  10          void Uart_init(void)
  11          {
  12   1              SCON = 0x50;                            // Set to enable serial reception. 8-bit UART Variable
  13   1              TMOD = TMOD | 0x20;                     // Timer 1 Mode 2: 8-bit auto-reload Timer/Counter (TL1).(1)Reloaded from TH1 at ov
             -erflow.
  14   1              TH1 = 0xFA;                                     // 9600 bauds at 11.0592 MHz
  15   1              TL1 = TH1; 
  16   1              PCON = PCON | 0X80;                     // SMOD0 Set to select double baud rate in mode 1, 2 or 3.
  17   1              TCON |= 0x40;                           // Set to turn on Timer/Counter 1.   
  18   1              TI=1;                                           // Set by hardware at the end of the 8th bit time in mode 0 or at the beginning of the 
  19   1                                                                      // stop bit in the other modes.
  20   1      }
  21          
  22          void put_char (const char *tmp) large
  23          {
  24   1      
  25   1              int i = 0;
  26   1      
  27   1              while((tmp[i] != NULL) && (tmp[i] != EOF)&& (tmp[i] != '\n'))
  28   1                      {
  29   2                      SBUF = tmp[i];
  30   2      
  31   2                      TI=0;
  32   2      
  33   2                      while(!TI);
  34   2                      
  35   2                      i ++;
  36   2                      }
  37   1      }
  38          
  39          void put_char_args(char *arg1, ...) large
  40          {
  41   1              va_list ap;
  42   1              char *str, rent='\n';
  43   1              // char temp[3]=0;
  44   1      
  45   1              va_start(ap, arg1);
  46   1              str = arg1;
  47   1      
  48   1              // sprintf(temp, "%s", sizeof(arg1));
  49   1              // put_char(temp), put_char(&rent);
  50   1      
  51   1              // printf("%s\n", arg1);
  52   1      
  53   1              do{
C51 COMPILER V9.02   MAIN                                                                  04/12/2015 01:32:40 PAGE 2   

  54   2                      put_char(str), put_char(&rent);
  55   2                      // printf("%s\n", str);
  56   2      
  57   2                      str = va_arg(ap, char *);
  58   2                      // str=str-1;
  59   2      
  60   2              } while((*str != NULL) && (*str != EOF));
  61   1              
  62   1              va_end(ap);
  63   1      
  64   1              put_char(&rent);
  65   1      }
  66          
  67          void main(void) large
  68          {
  69   1              code char *tmp_str ="Hello World!";
  70   1      
  71   1              Uart_init();
  72   1              ES=1;                   // Serial Port interrupt enable bit.
  73   1      
  74   1              // put_char(tmp_str);
  75   1              put_char_args("This test Variadic templates", tmp_str, "test", "4", "5", "6", "7", "8", "9");
  76   1      
  77   1              while(1);
  78   1      }
  79          
  80          
  81          
C51 COMPILER V9.02   MAIN                                                                  04/12/2015 01:32:40 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Uart_init (BEGIN)
                                           ; SOURCE LINE # 10
                                           ; SOURCE LINE # 11
                                           ; SOURCE LINE # 12
0000 759850            MOV     SCON,#050H
                                           ; SOURCE LINE # 13
0003 438920            ORL     TMOD,#020H
                                           ; SOURCE LINE # 14
0006 758DFA            MOV     TH1,#0FAH
                                           ; SOURCE LINE # 15
0009 858D8B            MOV     TL1,TH1
                                           ; SOURCE LINE # 16
000C 438780            ORL     PCON,#080H
                                           ; SOURCE LINE # 17
000F 438840            ORL     TCON,#040H
                                           ; SOURCE LINE # 18
0012 D299              SETB    TI
                                           ; SOURCE LINE # 20
0014 22                RET     
             ; FUNCTION Uart_init (END)

             ; FUNCTION _put_char (BEGIN)
                                           ; SOURCE LINE # 22
0000 900000      R     MOV     DPTR,#tmp
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 25
;---- Variable 'i' assigned to Register 'R6/R7' ----
000B E4                CLR     A
000C FF                MOV     R7,A
000D FE                MOV     R6,A
000E         ?C0002:
                                           ; SOURCE LINE # 27
000E 900000      R     MOV     DPTR,#tmp
0011 E0                MOVX    A,@DPTR
0012 FB                MOV     R3,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FA                MOV     R2,A
0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 F9                MOV     R1,A
0019 8F82              MOV     DPL,R7
001B 8E83              MOV     DPH,R6
001D 120000      E     LCALL   ?C?CLDOPTR
0020 FD                MOV     R5,A
0021 FB                MOV     R3,A
0022 33                RLC     A
0023 95E0              SUBB    A,ACC
0025 4B                ORL     A,R3
0026 6023              JZ      ?C0006
0028 ED                MOV     A,R5
0029 F4                CPL     A
C51 COMPILER V9.02   MAIN                                                                  04/12/2015 01:32:40 PAGE 4   

002A 601F              JZ      ?C0006
002C 900000      R     MOV     DPTR,#tmp
002F E0                MOVX    A,@DPTR
0030 FB                MOV     R3,A
0031 8F82              MOV     DPL,R7
0033 8E83              MOV     DPH,R6
0035 120000      E     LCALL   ?C?CLDOPTR
0038 FD                MOV     R5,A
0039 640A              XRL     A,#0AH
003B 600E              JZ      ?C0006
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 29
003D 8D99              MOV     SBUF,R5
                                           ; SOURCE LINE # 31
003F C299              CLR     TI
0041         ?C0004:
                                           ; SOURCE LINE # 33
0041 3099FD            JNB     TI,?C0004
0044         ?C0005:
                                           ; SOURCE LINE # 35
0044 0F                INC     R7
0045 BF0001            CJNE    R7,#00H,?C0015
0048 0E                INC     R6
0049         ?C0015:
                                           ; SOURCE LINE # 36
0049 80C3              SJMP    ?C0002
                                           ; SOURCE LINE # 37
004B         ?C0006:
004B 22                RET     
             ; FUNCTION _put_char (END)

             ; FUNCTION _put_char_args (BEGIN)
                                           ; SOURCE LINE # 39
0000 900000      R     MOV     DPTR,#arg1
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 42
000B 900000      R     MOV     DPTR,#rent
000E 740A              MOV     A,#0AH
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 45
0011 900000      R     MOV     DPTR,#ap
0014 7401              MOV     A,#01H
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
0018 7400        R     MOV     A,#HIGH arg1+03H
001A F0                MOVX    @DPTR,A
001B A3                INC     DPTR
001C 7400        R     MOV     A,#LOW arg1+03H
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 46
001F 900000      R     MOV     DPTR,#arg1
0022 E0                MOVX    A,@DPTR
0023 FB                MOV     R3,A
0024 A3                INC     DPTR
0025 E0                MOVX    A,@DPTR
C51 COMPILER V9.02   MAIN                                                                  04/12/2015 01:32:40 PAGE 5   

0026 FA                MOV     R2,A
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 F9                MOV     R1,A
;---- Variable 'str' assigned to Register 'R1/R2/R3' ----
002A         ?C0009:
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
002A 120000      R     LCALL   _put_char
002D 7B01              MOV     R3,#01H
002F 7A00        R     MOV     R2,#HIGH rent
0031 7900        R     MOV     R1,#LOW rent
0033 120000      R     LCALL   _put_char
                                           ; SOURCE LINE # 57
0036 900000      R     MOV     DPTR,#ap
0039 E0                MOVX    A,@DPTR
003A FB                MOV     R3,A
003B A3                INC     DPTR
003C E4                CLR     A
003D 75F003            MOV     B,#03H
0040 120000      E     LCALL   ?C?ILDIX
0043 A9F0              MOV     R1,B
0045 FA                MOV     R2,A
0046 120000      E     LCALL   ?C?PLDPTR
                                           ; SOURCE LINE # 60
0049 120000      E     LCALL   ?C?CLDPTR
004C FF                MOV     R7,A
004D FD                MOV     R5,A
004E 33                RLC     A
004F 95E0              SUBB    A,ACC
0051 4D                ORL     A,R5
0052 6004              JZ      ?C0008
0054 EF                MOV     A,R7
0055 B4FFD2            CJNE    A,#0FFH,?C0009
0058         ?C0008:
                                           ; SOURCE LINE # 64
0058 7B01              MOV     R3,#01H
005A 7A00        R     MOV     R2,#HIGH rent
005C 7900        R     MOV     R1,#LOW rent
005E 020000      R     LJMP    _put_char
             ; FUNCTION _put_char_args (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 71
0000 120000      R     LCALL   Uart_init
                                           ; SOURCE LINE # 72
0003 D2AC              SETB    ES
                                           ; SOURCE LINE # 75
0005 900000      R     MOV     DPTR,#tmp_str
0008 E4                CLR     A
0009 93                MOVC    A,@A+DPTR
000A F9                MOV     R1,A
000B 7401              MOV     A,#01H
000D 93                MOVC    A,@A+DPTR
000E FA                MOV     R2,A
000F 7402              MOV     A,#02H
0011 93                MOVC    A,@A+DPTR
0012 900000      R     MOV     DPTR,#?_put_char_args?BYTE+03H
0015 C9                XCH     A,R1
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
C51 COMPILER V9.02   MAIN                                                                  04/12/2015 01:32:40 PAGE 6   

0018 EA                MOV     A,R2
0019 F0                MOVX    @DPTR,A
001A A3                INC     DPTR
001B E9                MOV     A,R1
001C F0                MOVX    @DPTR,A
001D A3                INC     DPTR
001E 74FF              MOV     A,#0FFH
0020 F0                MOVX    @DPTR,A
0021 A3                INC     DPTR
0022 7400        R     MOV     A,#HIGH ?SC_42
0024 F0                MOVX    @DPTR,A
0025 A3                INC     DPTR
0026 7400        R     MOV     A,#LOW ?SC_42
0028 F0                MOVX    @DPTR,A
0029 A3                INC     DPTR
002A 74FF              MOV     A,#0FFH
002C F0                MOVX    @DPTR,A
002D A3                INC     DPTR
002E 7400        R     MOV     A,#HIGH ?SC_47
0030 F0                MOVX    @DPTR,A
0031 A3                INC     DPTR
0032 7400        R     MOV     A,#LOW ?SC_47
0034 F0                MOVX    @DPTR,A
0035 A3                INC     DPTR
0036 74FF              MOV     A,#0FFH
0038 F0                MOVX    @DPTR,A
0039 A3                INC     DPTR
003A 7400        R     MOV     A,#HIGH ?SC_49
003C F0                MOVX    @DPTR,A
003D A3                INC     DPTR
003E 7400        R     MOV     A,#LOW ?SC_49
0040 F0                MOVX    @DPTR,A
0041 A3                INC     DPTR
0042 74FF              MOV     A,#0FFH
0044 F0                MOVX    @DPTR,A
0045 A3                INC     DPTR
0046 7400        R     MOV     A,#HIGH ?SC_51
0048 F0                MOVX    @DPTR,A
0049 A3                INC     DPTR
004A 7400        R     MOV     A,#LOW ?SC_51
004C F0                MOVX    @DPTR,A
004D A3                INC     DPTR
004E 74FF              MOV     A,#0FFH
0050 F0                MOVX    @DPTR,A
0051 A3                INC     DPTR
0052 7400        R     MOV     A,#HIGH ?SC_53
0054 F0                MOVX    @DPTR,A
0055 A3                INC     DPTR
0056 7400        R     MOV     A,#LOW ?SC_53
0058 F0                MOVX    @DPTR,A
0059 A3                INC     DPTR
005A 74FF              MOV     A,#0FFH
005C F0                MOVX    @DPTR,A
005D A3                INC     DPTR
005E 7400        R     MOV     A,#HIGH ?SC_55
0060 F0                MOVX    @DPTR,A
0061 A3                INC     DPTR
0062 7400        R     MOV     A,#LOW ?SC_55
0064 F0                MOVX    @DPTR,A
0065 A3                INC     DPTR
0066 74FF              MOV     A,#0FFH
0068 F0                MOVX    @DPTR,A
C51 COMPILER V9.02   MAIN                                                                  04/12/2015 01:32:40 PAGE 7   

0069 A3                INC     DPTR
006A 7400        R     MOV     A,#HIGH ?SC_57
006C F0                MOVX    @DPTR,A
006D A3                INC     DPTR
006E 7400        R     MOV     A,#LOW ?SC_57
0070 F0                MOVX    @DPTR,A
0071 7BFF              MOV     R3,#0FFH
0073 7A00        R     MOV     R2,#HIGH ?SC_13
0075 7900        R     MOV     R1,#LOW ?SC_13
0077 120000      R     LCALL   _put_char_args
007A         ?C0012:
                                           ; SOURCE LINE # 77
007A 80FE              SJMP    ?C0012
             ; FUNCTION main (END)

C51 COMPILER V9.02   MAIN                                                                  04/12/2015 01:32:40 PAGE 8   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp_str. . . . . . . . . . . . . . .  STATIC   CODE   PTR      003BH  3
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
Uart_init. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
_put_char. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0006H  2
_put_char_args . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  arg1 . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  ellipsis_40. . . . . . . . . . . . .  AUTO     XDATA  ARRAY    0003H  40
  ap . . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      002BH  3
  str. . . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
  rent . . . . . . . . . . . . . . . .  AUTO     XDATA  CHAR     002EH  1
va_list. . . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    318    ----
   CONSTANT SIZE    =     62    ----
   XDATA SIZE       =   ----      50
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
